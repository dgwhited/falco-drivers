name: build

on:
  push:
    branches: 
      - main

env:
  DRIVERKIT_VERSION: "0.10.2"
  LIBS_VERSION: "0.9.2"
  S3_DRIVERS_BUCKET: "drivers-falco"

jobs:
  get-kernels:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      kernels: ${{ steps.set-kernels.outputs.kernels }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: INSTALL - python@3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-1
      
      - id: set-kernels
        run: |
          pip install boto3
          kernels=$(python ./.github/diff.py)
          echo "kernels=$kernels" >> $GITHUB_OUTPUT
          echo $kernels


  build:
    needs: get-kernels
    if: ${{ needs.get-kernels.outputs.kernels != '[]' && needs.get-kernels.outputs.kernels != '' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      id-token: write
      contents: read
    # container:
    #   image: falcosecurity/driverkit
    #   volumes:
    #     - /var/run/docker.sock:/var/run/docker.sock
    strategy:
      matrix: 
        kernels: ${{fromJson(needs.get-kernels.outputs.kernels)}}
        driver-version: ['2.0.0+driver', '3.0.1+driver']
    steps:
      - name: Rename artifacts
        run: |
          mkdir -p output/${{ matrix.driver-version }}/x86_64

      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: '1.19.3'

      - name: Install Driverkit
        run: go install github.com/falcosecurity/driverkit@v$DRIVERKIT_VERSION

      - name: Create Kernel
        run: driverkit docker --architecture=amd64 --builderimage "falcosecurity/driverkit-builder_bookworm:latest" --kernelversion=${{ matrix.kernels.kernelversion }} --kernelrelease=${{ matrix.kernels.kernelrelease}} --driverversion="$LIBS_VERSION" --target=${{ matrix.kernels.target }} --kernelurls="${{ matrix.kernels.headers[0] }}" --output-module="./output/${{ matrix.driver-version }}/x86_64/falco_${{ matrix.kernels.target }}.${{ matrix.kernels.kernelrelease }}_${{ matrix.kernels.kernelversion }}.ko" --timeout 240 -l debug

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Copy to S3
        run: aws s3 cp "output/${{ matrix.driver-version }}/" "s3://$S3_DRIVERS_BUCKET/${{ matrix.driver-version }}/" --recursive

      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
            "text": "New Falco Driver Built",
            "attachments": [{
                "blocks": [{
                    "type": "section",
                    "text": {
                        "type": "mrkdwn",
                        "text": "falco_${{ matrix.kernels.target }}.${{ matrix.kernels.kernelrelease }}_${{ matrix.kernels.kernelversion }}.ko"
                    }
                  }]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}